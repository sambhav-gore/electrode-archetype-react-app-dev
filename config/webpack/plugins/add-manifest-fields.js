/**
 * Allows arbitrary fields to be defined or overwritten
 * in a manifest.json file. It takes one argument, which is
 * an object containing the key/value pairs that will be defined
 * (or redefined) in the manifest.json file.
 *
 * If the manifest file is being generated by another webpack plugin,
 * then this plugin should be included *after* this one
 */

function AddManifestFieldsPlugin(fields) {
  this.fields = fields || {};
  this.regex = /manifest\.json/;
}

AddManifestFieldsPlugin.prototype.apply = function(compiler) {
  const regex = this.regex;
  const fields = this.fields;
  compiler.plugin("emit", (compilation, callback) => {
    for (const filename in compilation.assets) {
      if (regex.test(filename)) {
        const manifestAsset = compilation.assets[filename];
        const source = manifestAsset.source();
        const manifest = JSON.parse(source);
        for (const field in fields) {
          manifest[field] = fields[field];
        }
        const newManifestAsset = JSON.stringify(manifest, null, 2);
        compilation.assets[filename] = {
          source: () => newManifestAsset,
          size: () => newManifestAsset.length
        };
      }
    }
    callback();
  });
};

module.exports = AddManifestFieldsPlugin;
